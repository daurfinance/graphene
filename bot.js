import { Telegraf, session, Markup } from "telegraf"
import { createClient } from "@neondatabase/serverless"

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
const sql = createClient(process.env.DATABASE_URL)

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
const bot = new Telegraf(process.env.TELEGRAM_BOT_TOKEN)

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Å—Å–∏–∏
bot.use(session())

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.start(async (ctx) => {
  await registerUser(ctx)
  await ctx.reply(
    `üëã –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –ø—Ä–æ–µ–∫—Ç–∞ Graphene.\n\n` +
      `Graphene ‚Äî —ç—Ç–æ —Ç–æ–∫–µ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è Web3-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –º–∞—Å—à—Ç–∞–±–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –≥—Ä–∞—Ñ–µ–Ω–∞ –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ Solana.`,
    Markup.keyboard([
      ["üí∞ –ë–∞–ª–∞–Ω—Å", "üéÅ –≠–π—Ä–¥—Ä–æ–ø"],
      ["üë• –†–µ—Ñ–µ—Ä–∞–ª—ã", "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"],
      ["‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ", "üîÑ –ö—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã"],
    ]).resize(),
  )
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on("text", async (ctx) => {
  const text = ctx.message.text

  switch (text) {
    case "üí∞ –ë–∞–ª–∞–Ω—Å":
      await showBalance(ctx)
      break
    case "üéÅ –≠–π—Ä–¥—Ä–æ–ø":
      await showAirdropTasks(ctx)
      break
    case "üë• –†–µ—Ñ–µ—Ä–∞–ª—ã":
      await showReferrals(ctx)
      break
    case "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞":
      await showStats(ctx)
      break
    case "‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ":
      await showAbout(ctx)
      break
    case "üîÑ –ö—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã":
      await showBuyTokens(ctx)
      break
    default:
      await ctx.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏.")
  }
})

// –§—É–Ω–∫—Ü–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
async function registerUser(ctx) {
  const userId = ctx.from.id
  const username = ctx.from.username || ""
  const firstName = ctx.from.first_name || ""
  const lastName = ctx.from.last_name || ""

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    const existingUser = await sql`
      SELECT * FROM users WHERE telegram_id = ${userId}
    `

    if (existingUser.length === 0) {
      // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      await sql`
        INSERT INTO users (
          telegram_id, 
          username, 
          first_name, 
          last_name, 
          balance, 
          referral_code, 
          joined_at
        ) 
        VALUES (
          ${userId}, 
          ${username}, 
          ${firstName}, 
          ${lastName}, 
          ${0}, 
          ${generateReferralCode(userId)}, 
          ${new Date()}
        )
      `
      console.log(`–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω: ${firstName} ${lastName} (${userId})`)
    } else {
      console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: ${firstName} ${lastName} (${userId})`)
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:", error)
  }
}

// –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–≥–æ –∫–æ–¥–∞
function generateReferralCode(userId) {
  return `GRAPH${userId.toString().substring(0, 6)}`
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
async function showBalance(ctx) {
  const userId = ctx.from.id

  try {
    const user = await sql`
      SELECT balance, wallet_address FROM users WHERE telegram_id = ${userId}
    `

    if (user.length > 0) {
      const balance = user[0].balance || 0
      const walletAddress = user[0].wallet_address || null

      let message = `üí∞ *–í–∞—à –±–∞–ª–∞–Ω—Å*: ${balance} $GRAPH\n\n`

      if (walletAddress) {
        message += `üîë *–í–∞—à –∫–æ—à–µ–ª–µ–∫*: \`${walletAddress}\`\n\n`
      } else {
        message += "‚ö†Ô∏è –£ –≤–∞—Å –µ—â–µ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫–æ—à–µ–ª–µ–∫ Solana. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ –∫–æ—à–µ–ª–µ–∫, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —Ç–æ–∫–µ–Ω—ã.\n\n"
      }

      const buttons = []
      if (!walletAddress) {
        buttons.push(Markup.button.callback("üîë –ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫", "connect_wallet"))
      }

      buttons.push(Markup.button.callback("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –±–∞–ª–∞–Ω—Å", "refresh_balance"))

      await ctx.replyWithMarkdown(message, Markup.inlineKeyboard([buttons]))
    } else {
      await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞:", error)
    await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–∞–¥–∞–Ω–∏–π —ç–π—Ä–¥—Ä–æ–ø–∞
async function showAirdropTasks(ctx) {
  const userId = ctx.from.id

  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–¥–∞–Ω–∏—è—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    let tasks = await sql`
      SELECT * FROM airdrop_tasks WHERE user_id = ${userId}
    `

    // –ï—Å–ª–∏ –∑–∞–¥–∞–Ω–∏–π –Ω–µ—Ç, —Å–æ–∑–¥–∞–µ–º –∏—Ö
    if (tasks.length === 0) {
      await sql`
        INSERT INTO airdrop_tasks (user_id, task_type, completed)
        VALUES 
          (${userId}, 'connect_wallet', false),
          (${userId}, 'join_channel', false),
          (${userId}, 'follow_twitter', false),
          (${userId}, 'invite_friend', false),
          (${userId}, 'complete_quiz', false)
      `

      // –ü–æ–ª—É—á–∞–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è
      tasks = await sql`
        SELECT * FROM airdrop_tasks WHERE user_id = ${userId}
      `
    }

    // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
    const completedTasks = tasks.filter((task) => task.completed).length
    const totalTasks = tasks.length
    const progress = Math.round((completedTasks / totalTasks) * 100)

    // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä
    const progressBarLength = 10
    const filledBlocks = Math.round((progress / 100) * progressBarLength)
    const progressBar = "‚ñì".repeat(filledBlocks) + "‚ñë".repeat(progressBarLength - filledBlocks)

    let message =
      `üéÅ *–≠–π—Ä–¥—Ä–æ–ø $GRAPH —Ç–æ–∫–µ–Ω–æ–≤*\n\n` +
      `–í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –∏ –ø–æ–ª—É—á–∏—Ç–µ 100 $GRAPH —Ç–æ–∫–µ–Ω–æ–≤!\n\n` +
      `–ü—Ä–æ–≥—Ä–µ—Å—Å: ${completedTasks}/${totalTasks} –∑–∞–¥–∞–Ω–∏–π\n` +
      `[${progressBar}] ${progress}%\n\n` +
      `*–ó–∞–¥–∞–Ω–∏—è:*\n`

    // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞–Ω–∏–π
    const taskButtons = []

    for (const task of tasks) {
      const taskName = getTaskName(task.task_type)
      const taskStatus = task.completed ? "‚úÖ" : "‚¨ú"
      const taskReward = getTaskReward(task.task_type)

      message += `${taskStatus} ${taskName} (+${taskReward} $GRAPH)\n`

      if (!task.completed) {
        taskButtons.push([Markup.button.callback(`${taskName}`, `complete_task_${task.task_type}`)])
      }
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–∫–µ–Ω–æ–≤, –µ—Å–ª–∏ –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã
    if (completedTasks === totalTasks) {
      message += `\n‚úÖ –í—Å–µ –∑–∞–¥–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã! –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤–∞—à–∏ —Ç–æ–∫–µ–Ω—ã.`
      taskButtons.push([Markup.button.callback("üéÅ –ü–æ–ª—É—á–∏—Ç—å 100 $GRAPH", "claim_airdrop")])
    }

    await ctx.replyWithMarkdown(message, Markup.inlineKeyboard(taskButtons))
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞–Ω–∏–π —ç–π—Ä–¥—Ä–æ–ø–∞:", error)
    await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–¥–∞–Ω–∏–π —ç–π—Ä–¥—Ä–æ–ø–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –∑–∞–¥–∞–Ω–∏—è
function getTaskName(taskType) {
  switch (taskType) {
    case "connect_wallet":
      return "–ü–æ–¥–∫–ª—é—á–∏—Ç—å –∫–æ—à–µ–ª–µ–∫"
    case "join_channel":
      return "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª"
    case "follow_twitter":
      return "–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ Twitter"
    case "invite_friend":
      return "–ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–≥–∞"
    case "complete_quiz":
      return "–ü—Ä–æ–π—Ç–∏ –∫–≤–∏–∑ –æ –≥—Ä–∞—Ñ–µ–Ω–µ"
    default:
      return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ –∑–∞–¥–∞–Ω–∏–µ"
  }
}

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–≥—Ä–∞–¥—ã –∑–∞ –∑–∞–¥–∞–Ω–∏–µ
function getTaskReward(taskType) {
  switch (taskType) {
    case "connect_wallet":
      return 10
    case "join_channel":
      return 15
    case "follow_twitter":
      return 15
    case "invite_friend":
      return 30
    case "complete_quiz":
      return 30
    default:
      return 0
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã
async function showReferrals(ctx) {
  const userId = ctx.from.id

  try {
    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö
    const user = await sql`
      SELECT referral_code FROM users WHERE telegram_id = ${userId}
    `

    const referrals = await sql`
      SELECT COUNT(*) as count FROM users WHERE referred_by = ${userId}
    `

    const referralCount = referrals[0]?.count || 0
    const referralCode = user[0]?.referral_code || generateReferralCode(userId)
    const referralLink = `https://t.me/graphene_bot?start=${referralCode}`

    await ctx.replyWithMarkdown(
      `üë• *–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞*\n\n` +
        `–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ —Ç–æ–∫–µ–Ω—ã $GRAPH!\n\n` +
        `üîó *–í–∞—à–∞ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å—Å—ã–ª–∫–∞:*\n` +
        `\`${referralLink}\`\n\n` +
        `üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:*\n` +
        `- –ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ –¥—Ä—É–∑–µ–π: ${referralCount}\n` +
        `- –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: ${referralCount * 30} $GRAPH\n\n` +
        `üí∞ –ó–∞ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω–æ–≥–æ –¥—Ä—É–≥–∞ –≤—ã –ø–æ–ª—É—á–∞–µ—Ç–µ 30 $GRAPH!`,
      Markup.inlineKeyboard([
        [Markup.button.callback("üìã –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å—Å—ã–ª–∫—É", "copy_referral_link")],
        [
          Markup.button.url(
            "üì± –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –≤ Telegram",
            `https://t.me/share/url?url=${encodeURIComponent(referralLink)}&text=${encodeURIComponent("–ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ Graphene –∏ –ø–æ–ª—É—á–∏ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã $GRAPH!")}`,
          ),
        ],
      ]),
    )
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ —Ä–µ—Ñ–µ—Ä–∞–ª–∞—Ö:", error)
    await ctx.reply("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
async function showStats(ctx) {
  try {
    const stats = await sql`
      SELECT 
        (SELECT COUNT(*) FROM users) as total_users,
        (SELECT SUM(balance) FROM users) as total_tokens,
        (SELECT COUNT(*) FROM airdrop_tasks WHERE completed = true) as completed_tasks
    `

    if (stats.length > 0) {
      const totalUsers = stats[0].total_users || 0
      const totalTokens = stats[0].total_tokens || 0
      const completedTasks = stats[0].completed_tasks || 0

      await ctx.replyWithMarkdown(
        `üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ Graphene*\n\n` +
          `üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${totalUsers}\n` +
          `üí∞ –¢–æ–∫–µ–Ω–æ–≤ –≤ –æ–±—Ä–∞—â–µ–Ω–∏–∏: ${totalTokens} $GRAPH\n` +
          `‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞–Ω–∏–π: ${completedTasks}\n\n` +
          `üöÄ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É —Å–æ–æ–±—â–µ—Å—Ç–≤—É –∏ —Å—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç—å—é —Ä–µ–≤–æ–ª—é—Ü–∏–∏ –≤ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ –≥—Ä–∞—Ñ–µ–Ω–∞!`,
        Markup.inlineKeyboard([
          [Markup.button.url("üåê –í–µ–±-—Å–∞–π—Ç", "https://graphene.com")],
          [Markup.button.url("üì¢ Telegram –∫–∞–Ω–∞–ª", "https://t.me/graphene_channel")],
        ]),
      )
    } else {
      await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:", error)
    await ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
  }
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ–µ–∫—Ç–µ
async function showAbout(ctx) {
  await ctx.replyWithMarkdown(
    `‚ÑπÔ∏è *–û –ø—Ä–æ–µ–∫—Ç–µ Graphene*\n\n` +
      `Graphene ‚Äî —ç—Ç–æ —Ç–æ–∫–µ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è Web3-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –º–∞—Å—à—Ç–∞–±–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –≥—Ä–∞—Ñ–µ–Ω–∞ –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ Solana.\n\n` +
      `*–ß—Ç–æ —Ç–∞–∫–æ–µ –≥—Ä–∞—Ñ–µ–Ω?*\n` +
      `–ì—Ä–∞—Ñ–µ–Ω ‚Äî —ç—Ç–æ –¥–≤—É–º–µ—Ä–Ω–∞—è –∞–ª–ª–æ—Ç—Ä–æ–ø–Ω–∞—è –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏—è —É–≥–ª–µ—Ä–æ–¥–∞, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–∞—è —Å–ª–æ–µ–º –∞—Ç–æ–º–æ–≤ —É–≥–ª–µ—Ä–æ–¥–∞ —Ç–æ–ª—â–∏–Ω–æ–π –≤ –æ–¥–∏–Ω –∞—Ç–æ–º. –û–±–ª–∞–¥–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—ã–º–∏ —Å–≤–æ–π—Å—Ç–≤–∞–º–∏: –≤—ã—Å–æ–∫–æ–π —ç–ª–µ–∫—Ç—Ä–æ- –∏ —Ç–µ–ø–ª–æ–ø—Ä–æ–≤–æ–¥–Ω–æ—Å—Ç—å—é, –ø—Ä–æ—á–Ω–æ—Å—Ç—å—é –∏ –≥–∏–±–∫–æ—Å—Ç—å—é.\n\n` +
      `*–ù–∞—à–∞ –º–∏—Å—Å–∏—è*\n` +
      `–ü—Ä–æ–µ–∫—Ç Graphene —Å—Ç—Ä–µ–º–∏—Ç—Å—è –¥–µ–º–æ–∫—Ä–∞—Ç–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤—É –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –≥—Ä–∞—Ñ–µ–Ω–∞ —á–µ—Ä–µ–∑ —Ç–æ–∫–µ–Ω–∏–∑–∞—Ü–∏—é –∏ –±–ª–æ–∫—á–µ–π–Ω-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏. –ú—ã —Å–æ–∑–¥–∞–µ–º —ç–∫–æ—Å–∏—Å—Ç–µ–º—É, –≥–¥–µ –∫–∞–∂–¥—ã–π –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å —á–∞—Å—Ç—å—é —Ä–µ–≤–æ–ª—é—Ü–∏–∏ –≤ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤–µ–¥–µ–Ω–∏–∏.\n\n` +
      `*–¢–æ–∫–µ–Ω $GRAPH*\n` +
      `$GRAPH ‚Äî —ç—Ç–æ utility-—Ç–æ–∫–µ–Ω —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã Graphene –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ Solana. –û–±—â–µ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ: 100,000,000 $GRAPH.`,
    Markup.inlineKeyboard([
      [Markup.button.url("üåê –í–µ–±-—Å–∞–π—Ç", "https://graphene.com")],
      [Markup.button.url("üìÑ Whitepaper", "https://graphene.com/whitepaper")],
      [Markup.button.callback("üí∞ –¢–æ–∫–µ–Ω–æ–º–∏–∫–∞", "tokenomics")],
    ]),
  )
}

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–∫—É–ø–∫–µ —Ç–æ–∫–µ–Ω–æ–≤
async function showBuyTokens(ctx) {
  await ctx.replyWithMarkdown(
    `üîÑ *–ö—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã $GRAPH*\n\n` +
      `–¢–µ–∫—É—â–∏–π –∫—É—Ä—Å: 1 SOL = 1000 $GRAPH\n\n` +
      `–î–ª—è –ø–æ–∫—É–ø–∫–∏ —Ç–æ–∫–µ–Ω–æ–≤ –≤—ã–±–µ—Ä–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —Å–ø–æ—Å–æ–±–æ–≤ –Ω–∏–∂–µ:`,
    Markup.inlineKeyboard([
      [Markup.button.callback("üí≥ –ö—É–ø–∏—Ç—å —Å –ø–æ–º–æ—â—å—é SOL", "buy_with_sol")],
      [Markup.button.url("üîÑ –ö—É–ø–∏—Ç—å –Ω–∞ DEX", "https://raydium.io/swap/")],
      [Markup.button.callback("‚ùì –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –ø–æ–∫—É–ø–∫–µ", "buy_instructions")],
    ]),
  )
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º
bot.hears(/\/start (.+)/, async (ctx) => {
  const referralCode = ctx.match[1]
  const userId = ctx.from.id

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–º –∫–æ–¥–æ–º
    const referrer = await sql`
      SELECT telegram_id FROM users WHERE referral_code = ${referralCode}
    `

    if (referrer.length > 0 && referrer[0].telegram_id !== userId) {
      const referrerId = referrer[0].telegram_id

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω
      const user = await sql`
        SELECT referred_by FROM users WHERE telegram_id = ${userId}
      `

      if (user.length > 0 && !user[0].referred_by) {
        // –û–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        await sql`
          UPDATE users SET referred_by = ${referrerId} WHERE telegram_id = ${userId}
        `

        // –ù–∞—á–∏—Å–ª—è–µ–º —Ç–æ–∫–µ–Ω—ã —Ä–µ—Ñ–µ—Ä–µ—Ä—É
        await sql`
          UPDATE users SET balance = balance + 30 WHERE telegram_id = ${referrerId}
        `

        // –£–≤–µ–¥–æ–º–ª—è–µ–º —Ä–µ—Ñ–µ—Ä–µ—Ä–∞
        await ctx.telegram.sendMessage(
          referrerId,
          `üéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –ü–æ –≤–∞—à–µ–π —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å. –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 30 $GRAPH!`,
        )

        await ctx.reply("‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å –ø–æ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–µ!")
      }
    }
  } catch (error) {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–∏:", error)
  }

  // –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–æ–º–∞–Ω–¥—ã /start
  await registerUser(ctx)
  await ctx.reply(
    `üëã –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –ø—Ä–æ–µ–∫—Ç–∞ Graphene.\n\n` +
      `Graphene ‚Äî —ç—Ç–æ —Ç–æ–∫–µ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è Web3-–ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –º–∞—Å—à—Ç–∞–±–Ω–æ–≥–æ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –≥—Ä–∞—Ñ–µ–Ω–∞ –Ω–∞ –±–ª–æ–∫—á–µ–π–Ω–µ Solana.`,
    Markup.keyboard([
      ["üí∞ –ë–∞–ª–∞–Ω—Å", "üéÅ –≠–π—Ä–¥—Ä–æ–ø"],
      ["üë• –†–µ—Ñ–µ—Ä–∞–ª—ã", "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"],
      ["‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ", "üîÑ –ö—É–ø–∏—Ç—å —Ç–æ–∫–µ–Ω—ã"],
    ]).resize(),
  )
})

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
bot.catch((err, ctx) => {
  console.error(`–û—à–∏–±–∫–∞ –¥–ª—è ${ctx.updateType}`, err)
  ctx.reply("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.")
})

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot
  .launch()
  .then(() => {
    console.log("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
  })
  .catch((err) => {
    console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞:", err)
  })

// –í–∫–ª—é—á–∞–µ–º graceful stop
process.once("SIGINT", () => bot.stop("SIGINT"))
process.once("SIGTERM", () => bot.stop("SIGTERM"))
